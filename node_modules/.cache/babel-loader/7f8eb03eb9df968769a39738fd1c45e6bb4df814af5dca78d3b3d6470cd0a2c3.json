{"ast":null,"code":"import { atomFamily, selector } from \"recoil\";\nimport { subscriptionService } from \"../core/services/subscription.service\";\nimport { UsageType } from \"../core/types/usageType\";\nconst usageSelector = selector({\n  key: \"usageSelector\",\n  get: () => subscriptionService.getUsage(UsageType.LIFETIME)\n});\nexport const usageState = atomFamily({\n  key: \"usageState\",\n  default: usageType => {\n    return subscriptionService.getUsage(usageType);\n  }\n});","map":{"version":3,"names":["atomFamily","selector","subscriptionService","UsageType","usageSelector","key","get","getUsage","LIFETIME","usageState","default","usageType"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/state/usageState.ts"],"sourcesContent":["import { atom, atomFamily, selector } from \"recoil\";\nimport { subscriptionService } from \"../core/services/subscription.service\";\nimport { UsageType } from \"../core/types/usageType\";\nimport { UsageResponseData } from \"../core/services/requests/usage/usageResponseData\";\n\nconst usageSelector = selector({\n  key: \"usageSelector\",\n  get: () => subscriptionService.getUsage(UsageType.LIFETIME),\n});\n\nexport const usageState = atomFamily<UsageResponseData, UsageType>({\n  key: \"usageState\",\n  default: (usageType: UsageType) => {\n    return subscriptionService.getUsage(usageType);\n  },\n});\n"],"mappings":"AAAA,SAAeA,UAAU,EAAEC,QAAQ,QAAQ,QAAQ;AACnD,SAASC,mBAAmB,QAAQ,uCAAuC;AAC3E,SAASC,SAAS,QAAQ,yBAAyB;AAGnD,MAAMC,aAAa,GAAGH,QAAQ,CAAC;EAC7BI,GAAG,EAAE,eAAe;EACpBC,GAAG,EAAEA,CAAA,KAAMJ,mBAAmB,CAACK,QAAQ,CAACJ,SAAS,CAACK,QAAQ;AAC5D,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGT,UAAU,CAA+B;EACjEK,GAAG,EAAE,YAAY;EACjBK,OAAO,EAAGC,SAAoB,IAAK;IACjC,OAAOT,mBAAmB,CAACK,QAAQ,CAACI,SAAS,CAAC;EAChD;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
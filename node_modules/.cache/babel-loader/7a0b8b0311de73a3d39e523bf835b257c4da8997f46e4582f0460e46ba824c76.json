{"ast":null,"code":"var _jsxFileName = \"/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/menu/Usage.tsx\",\n  _s = $RefreshSig$();\nimport { useRecoilValue } from \"recoil\";\nimport { usageState } from \"../../state/usageState\";\nimport { UsageType } from \"../../core/types/usageType\";\nimport styled from \"styled-components\";\nimport { useMemo } from \"react\";\nimport React from \"react\";\nimport { userState } from \"../../state/userState\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport { PackageType } from \"../../core/types/packageType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgressWrapper = styled.div`\n  span {\n    font-weight: bold;\n    font-size: 14px;\n  }\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  .MuiCircularProgress-root {\n    width: 15px !important;\n    height: 15px !important;\n  }\n\n  circle {\n    color: var(--primary-purple);\n  }\n`;\n_c = ProgressWrapper;\nconst Usage = () => {\n  _s();\n  const user = useRecoilValue(userState);\n  const isLifeTimeSubscription = useMemo(() => user.company.Subscription.type === PackageType.TRIAL, [user.company.Subscription.type]);\n  const usage = useRecoilValue(usageState(isLifeTimeSubscription ? UsageType.LIFETIME : UsageType.MONTHLY));\n  const maxArticles = user.company.Subscription.maxArticles;\n  const ratio = usage.articles / maxArticles * 100;\n  const articlesLeft = user.company.Subscription.maxArticles - usage.articles;\n  const tooltipText = `נשארו לך ${articlesLeft} מאמרים ${isLifeTimeSubscription ? \"בניסיון\" : \"לחודש הזה\"}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProgressWrapper, {\n      className: \"usage\",\n      \"data-pr-tooltip\": tooltipText,\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        variant: \"determinate\",\n        value: ratio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [usage.articles, \"/\", maxArticles]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"\\u05DE\\u05D0\\u05DE\\u05E8\\u05D9\\u05DD \\u05E9\\u05E0\\u05D5\\u05E6\\u05E8\\u05D5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      target: \".usage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Usage, \"huj7WLcowHAyo8tZEAzX/KxELCM=\", false, function () {\n  return [useRecoilValue, useRecoilValue];\n});\n_c2 = Usage;\nexport default Usage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressWrapper\");\n$RefreshReg$(_c2, \"Usage\");","map":{"version":3,"names":["useRecoilValue","usageState","UsageType","styled","useMemo","React","userState","CircularProgress","Tooltip","PackageType","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgressWrapper","div","_c","Usage","_s","user","isLifeTimeSubscription","company","Subscription","type","TRIAL","usage","LIFETIME","MONTHLY","maxArticles","ratio","articles","articlesLeft","tooltipText","children","className","variant","value","fileName","_jsxFileName","lineNumber","columnNumber","target","_c2","$RefreshReg$"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/menu/Usage.tsx"],"sourcesContent":["import { useRecoilValue } from \"recoil\";\nimport { usageState } from \"../../state/usageState\";\nimport { UsageType } from \"../../core/types/usageType\";\nimport styled from \"styled-components\";\nimport { useMemo } from \"react\";\nimport React from \"react\";\nimport { userState } from \"../../state/userState\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport { PackageType } from \"../../core/types/packageType\";\n\nconst ProgressWrapper = styled.div`\n  span {\n    font-weight: bold;\n    font-size: 14px;\n  }\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  .MuiCircularProgress-root {\n    width: 15px !important;\n    height: 15px !important;\n  }\n\n  circle {\n    color: var(--primary-purple);\n  }\n`;\n\nconst Usage: React.FC = () => {\n  const user = useRecoilValue(userState);\n  const isLifeTimeSubscription = useMemo(\n    () => user.company.Subscription.type === PackageType.TRIAL,\n    [user.company.Subscription.type]\n  );\n\n  const usage = useRecoilValue(\n    usageState(isLifeTimeSubscription ? UsageType.LIFETIME : UsageType.MONTHLY)\n  );\n\n  const maxArticles = user.company.Subscription.maxArticles;\n  const ratio = (usage.articles / maxArticles) * 100;\n  const articlesLeft = user.company.Subscription.maxArticles - usage.articles;\n  const tooltipText = `נשארו לך ${articlesLeft} מאמרים ${\n    isLifeTimeSubscription ? \"בניסיון\" : \"לחודש הזה\"\n  }`;\n  return (\n    <>\n      <ProgressWrapper className=\"usage\" data-pr-tooltip={tooltipText}>\n        <CircularProgress variant=\"determinate\" value={ratio} />\n        <div>\n          <span>\n            {usage.articles}/{maxArticles}\n          </span>{\" \"}\n          <small>מאמרים שנוצרו</small>\n        </div>\n      </ProgressWrapper>\n      <Tooltip target=\".usage\" />\n    </>\n  );\n};\n\nexport default Usage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
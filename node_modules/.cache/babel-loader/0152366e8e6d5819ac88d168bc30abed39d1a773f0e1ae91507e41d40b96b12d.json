{"ast":null,"code":"var _jsxFileName = \"/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/document/BlockSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport { documentState } from \"../../state/documentState\";\nimport { useRecoilValue } from \"recoil\";\nimport Masonry from \"@mui/lab/Masonry\";\nimport { useFieldArray, useFormContext } from \"react-hook-form\";\nimport { BlockWrapper } from \"./components/BlockWrapper\";\nimport documentsDictionary from \"./documentsDictionary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 10px;\n  background-color: #f6f9fc;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n_c = Wrapper;\nconst BlockSection = () => {\n  _s();\n  const {\n    documentId\n  } = useParams();\n  const document = useRecoilValue(documentState(documentId));\n  const {\n    control,\n    formState: {\n      errors\n    }\n  } = useFormContext();\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"output\"\n  });\n  const onDelet = blockindex => {\n    remove(blockindex);\n  };\n  const columns = useMemo(() => documentsDictionary[document.type].columns, [document.type]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"col-8 \",\n    children: /*#__PURE__*/_jsxDEV(Masonry, {\n      columns: columns || 3,\n      children: fields.map((block, index) => /*#__PURE__*/_jsxDEV(BlockWrapper, {\n        index: index,\n        onDelet: onDelet\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BlockSection, \"ymHIthTHwkh+acrS2KXmMWU9O4M=\", false, function () {\n  return [useParams, useRecoilValue, useFormContext, useFieldArray];\n});\n_c2 = BlockSection;\nexport default BlockSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"BlockSection\");","map":{"version":3,"names":["React","useMemo","styled","useParams","documentState","useRecoilValue","Masonry","useFieldArray","useFormContext","BlockWrapper","documentsDictionary","jsxDEV","_jsxDEV","Wrapper","div","_c","BlockSection","_s","documentId","document","control","formState","errors","fields","append","remove","name","onDelet","blockindex","columns","type","className","children","map","block","index","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/document/BlockSection.tsx"],"sourcesContent":["import React, { ReactElement, useCallback, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport { DocumentEntityType, DocumentEntity } from \"neword-core\";\nimport { documentState } from \"../../state/documentState\";\nimport { useRecoilValue } from \"recoil\";\nimport Masonry from \"@mui/lab/Masonry\";\n\nimport { useFieldArray, useFormContext } from \"react-hook-form\";\nimport { BlockWrapper } from \"./components/BlockWrapper\";\nimport documentsDictionary from \"./documentsDictionary\";\n\nconst Wrapper = styled.div`\n  padding: 10px;\n  background-color: #f6f9fc;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst BlockSection: React.FC = () => {\n  const { documentId } = useParams<{\n    documentId: string;\n  }>();\n  const document = useRecoilValue(documentState(documentId as string));\n\n  const {\n    control,\n    formState: { errors },\n  } = useFormContext<DocumentEntity<typeof document.type>>();\n\n  const { fields, append, remove } = useFieldArray<\n    DocumentEntity<typeof document.type>\n  >({\n    control,\n    name: \"output\",\n  });\n\n  const onDelet = (blockindex: number) => {\n    remove(blockindex);\n  };\n\n  const columns = useMemo(\n    () => documentsDictionary[document.type].columns,\n    [document.type]\n  );\n\n  return (\n    <Wrapper className=\"col-8 \">\n      <Masonry columns={columns || 3}>\n        {fields.map((block, index) => (\n          <BlockWrapper key={block.id} index={index} onDelet={onDelet} />\n        ))}\n      </Masonry>\n    </Wrapper>\n  );\n};\n\nexport default BlockSection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA+BC,OAAO,QAAkB,OAAO;AAC3E,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,cAAc;AAExC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,SAASC,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAC/D,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,OAAO,GAAGX,MAAM,CAACY,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,OAAO;AAQb,MAAMG,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAW,CAAC,GAAGf,SAAS,CAE7B,CAAC;EACJ,MAAMgB,QAAQ,GAAGd,cAAc,CAACD,aAAa,CAACc,UAAoB,CAAC,CAAC;EAEpE,MAAM;IACJE,OAAO;IACPC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGd,cAAc,CAAuC,CAAC;EAE1D,MAAM;IAAEe,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGlB,aAAa,CAE9C;IACAa,OAAO;IACPM,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAIC,UAAkB,IAAK;IACtCH,MAAM,CAACG,UAAU,CAAC;EACpB,CAAC;EAED,MAAMC,OAAO,GAAG5B,OAAO,CACrB,MAAMS,mBAAmB,CAACS,QAAQ,CAACW,IAAI,CAAC,CAACD,OAAO,EAChD,CAACV,QAAQ,CAACW,IAAI,CAChB,CAAC;EAED,oBACElB,OAAA,CAACC,OAAO;IAACkB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACzBpB,OAAA,CAACN,OAAO;MAACuB,OAAO,EAAEA,OAAO,IAAI,CAAE;MAAAG,QAAA,EAC5BT,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBvB,OAAA,CAACH,YAAY;QAAgB0B,KAAK,EAAEA,KAAM;QAACR,OAAO,EAAEA;MAAQ,GAAzCO,KAAK,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAC/D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACvB,EAAA,CApCID,YAAsB;EAAA,QACHb,SAAS,EAGfE,cAAc,EAK3BG,cAAc,EAEiBD,aAAa;AAAA;AAAAkC,GAAA,GAX5CzB,YAAsB;AAsC5B,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport AppConfig from \"../../config/appConfig\";\nexport class ServiceBase {\n  constructor() {\n    this.config = AppConfig;\n    this.prefix = void 0;\n  }\n  async sendRequest(config) {\n    try {\n      const res = (await axios({\n        ...config,\n        baseURL: AppConfig.serverUrl + this.prefix,\n        withCredentials: true\n      })).data;\n      if (!res.isSuccessfull) throw new Error(\"request failed\");\n      return res.data;\n    } catch (err) {\n      var _err$response;\n      if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) throw new Error(\"Unauthorized\");else {\n        var _err$response2, _err$response2$data;\n        toast(`${(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.cause) || \"Unkown error, please refresh your page\"}`, {\n          type: \"error\"\n        });\n        throw err;\n      }\n    }\n  }\n  get() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.sendRequest({\n      method: \"GET\",\n      url: path,\n      data\n    });\n  }\n  post() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let headers = arguments.length > 2 ? arguments[2] : undefined;\n    return this.sendRequest({\n      method: \"POST\",\n      url: path,\n      data,\n      headers\n    });\n  }\n  patch() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.sendRequest({\n      method: \"PATCH\",\n      url: path,\n      data\n    });\n  }\n  put() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.sendRequest({\n      method: \"PUT\",\n      url: path,\n      data\n    });\n  }\n  delete() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.sendRequest({\n      method: \"DELETE\",\n      url: path,\n      data\n    });\n  }\n  fetch() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let config = arguments.length > 1 ? arguments[1] : undefined;\n    return fetch(AppConfig.serverUrl + this.prefix + path, {\n      ...config,\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n}","map":{"version":3,"names":["axios","toast","AppConfig","ServiceBase","constructor","config","prefix","sendRequest","res","baseURL","serverUrl","withCredentials","data","isSuccessfull","Error","err","_err$response","response","status","_err$response2","_err$response2$data","cause","type","get","path","arguments","length","undefined","method","url","post","headers","patch","put","delete","fetch","credentials"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/core/services/service.base.ts"],"sourcesContent":["import { Alert } from \"@mui/material\";\nimport axios, { AxiosRequestConfig } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport AppConfig from \"../../config/appConfig\";\nimport { HttpResponse } from \"../entities/httpResponse\";\n\nexport abstract class ServiceBase {\n  config = AppConfig;\n  abstract prefix?: string;\n\n  private async sendRequest<ResponseObject>(config: AxiosRequestConfig) {\n    try {\n      const res: HttpResponse<ResponseObject> = (\n        await axios({\n          ...config,\n          baseURL: AppConfig.serverUrl + this.prefix,\n          withCredentials: true,\n        })\n      ).data;\n      if (!res.isSuccessfull) throw new Error(\"request failed\");\n      return res.data;\n    } catch (err: any) {\n      if (err?.response?.status === 401) throw new Error(\"Unauthorized\");\n      else {\n        toast(\n          `${\n            err?.response?.data?.cause ||\n            \"Unkown error, please refresh your page\"\n          }`,\n          {\n            type: \"error\",\n          }\n        );\n        throw err;\n      }\n    }\n  }\n\n  protected get<ResponseObject>(path: string = \"\", data: any = {}) {\n    return this.sendRequest<ResponseObject>({\n      method: \"GET\",\n      url: path,\n      data,\n    });\n  }\n\n  protected post<ResponseObject>(\n    path: string = \"\",\n    data: any = {},\n    headers?: any\n  ) {\n    return this.sendRequest<ResponseObject>({\n      method: \"POST\",\n      url: path,\n      data,\n      headers,\n    });\n  }\n\n  protected patch<ResponseObject>(path: string = \"\", data: any = {}) {\n    return this.sendRequest<ResponseObject>({\n      method: \"PATCH\",\n      url: path,\n      data,\n    });\n  }\n\n  protected put<ResponseObject>(path: string = \"\", data: any = {}) {\n    return this.sendRequest<ResponseObject>({\n      method: \"PUT\",\n      url: path,\n      data,\n    });\n  }\n\n  protected delete<ResponseObject>(path: string = \"\", data: any = {}) {\n    return this.sendRequest<ResponseObject>({\n      method: \"DELETE\",\n      url: path,\n      data,\n    });\n  }\n\n  protected fetch(path: string = \"\", config: RequestInit) {\n    return fetch(AppConfig.serverUrl + this.prefix + path, {\n      ...config,\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
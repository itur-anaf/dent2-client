{"ast":null,"code":"import { ServiceBase } from \"./service.base\";\nclass UserService extends ServiceBase {\n  constructor() {\n    super(...arguments);\n    this.prefix = \"/user\";\n  }\n  async whoAmI() {\n    return await this.get(\"/me\");\n  }\n  login(data) {\n    return this.post(\"/login\", data);\n  }\n  createUser(data) {\n    return this.post(\"/createUser\", data);\n  }\n  inviteUser(data) {\n    return this.post(\"/invite\", data);\n  }\n  getUsers() {\n    return this.get(\"/users\");\n  }\n  resetPassword(data) {\n    return this.post(\"/resetPassword\", data);\n  }\n  updatePassword(data) {\n    return this.post(\"/updatePassword\", data);\n  }\n  completeSignUp(data) {\n    return this.post(\"/completeSignup\", data);\n  }\n  resendEmailVerificationCode() {\n    return this.post(\"resendVerificationCode\");\n  }\n  verifyCode(data) {\n    return this.post(\"/validatePhone\", data);\n  }\n  updateUser(data) {\n    return this.patch(\"/\", data);\n  }\n  logout() {\n    return this.post(\"/logout\");\n  }\n\n  // !!SUPPER ADMIN REQUESTS!!\n  getAllUsers(query) {\n    return this.get(`/admin/users?query=${query}`);\n  }\n  silentLoginLink(userId) {\n    return this.get(`/admin/silentlogin/${userId}`);\n  }\n}\nconst userService = new UserService();\nexport default userService;","map":{"version":3,"names":["ServiceBase","UserService","constructor","arguments","prefix","whoAmI","get","login","data","post","createUser","inviteUser","getUsers","resetPassword","updatePassword","completeSignUp","resendEmailVerificationCode","verifyCode","updateUser","patch","logout","getAllUsers","query","silentLoginLink","userId","userService"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/core/services/user.service.ts"],"sourcesContent":["import { User } from \"../entities/user\";\nimport { CreateUserRequestData } from \"./requests/createUser/createUserRequestData copy\";\nimport { LoginRequestData } from \"./requests/login/loginRequestData\";\nimport { LoginResponseData } from \"./requests/login/loginResponseData\";\nimport { ResetPasswordRequestData } from \"./requests/resetPassword/resetPasswordRequestData\";\nimport { CompleteSignupRequestData } from \"./requests/signup/completeSignupRequestData\";\nimport { InviteUserRequestData } from \"./requests/signup/inviteUserRequestData\";\nimport { ValidatePhoneCodeRequest } from \"./requests/signup/validatePhoneCodeRequest\";\nimport { UpdatePasswordRequestData } from \"./requests/updatePassword/updatePasswordRequestData\";\nimport { ServiceBase } from \"./service.base\";\n\nclass UserService extends ServiceBase {\n  prefix = \"/user\";\n  async whoAmI() {\n    return await this.get<User>(\"/me\");\n  }\n\n  login(data: LoginRequestData) {\n    return this.post<LoginResponseData>(\"/login\", data);\n  }\n  createUser(data: CreateUserRequestData) {\n    return this.post<CreateUserRequestData>(\"/createUser\", data);\n  }\n  inviteUser(data: InviteUserRequestData) {\n    return this.post<User>(\"/invite\", data);\n  }\n\n  getUsers() {\n    return this.get<User[]>(\"/users\");\n  }\n\n  resetPassword(data: ResetPasswordRequestData) {\n    return this.post<void>(\"/resetPassword\", data);\n  }\n\n  updatePassword(data: UpdatePasswordRequestData) {\n    return this.post(\"/updatePassword\", data);\n  }\n\n  completeSignUp(data: CompleteSignupRequestData) {\n    return this.post<void>(\"/completeSignup\", data);\n  }\n\n  resendEmailVerificationCode() {\n    return this.post<void>(\"resendVerificationCode\");\n  }\n\n  verifyCode(data: ValidatePhoneCodeRequest) {\n    return this.post<void>(\"/validatePhone\", data);\n  }\n\n  updateUser(data: Partial<User>) {\n    return this.patch<User>(\"/\", data);\n  }\n\n  logout() {\n    return this.post<void>(\"/logout\");\n  }\n\n  // !!SUPPER ADMIN REQUESTS!!\n  getAllUsers(query: string) {\n    return this.get<User[]>(`/admin/users?query=${query}`);\n  }\n\n  silentLoginLink(userId: string) {\n    return this.get<string>(`/admin/silentlogin/${userId}`);\n  }\n}\nconst userService = new UserService();\nexport default userService;\n"],"mappings":"AASA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,WAAW,SAASD,WAAW,CAAC;EAAAE,YAAA;IAAA,SAAAC,SAAA;IAAA,KACpCC,MAAM,GAAG,OAAO;EAAA;EAChB,MAAMC,MAAMA,CAAA,EAAG;IACb,OAAO,MAAM,IAAI,CAACC,GAAG,CAAO,KAAK,CAAC;EACpC;EAEAC,KAAKA,CAACC,IAAsB,EAAE;IAC5B,OAAO,IAAI,CAACC,IAAI,CAAoB,QAAQ,EAAED,IAAI,CAAC;EACrD;EACAE,UAAUA,CAACF,IAA2B,EAAE;IACtC,OAAO,IAAI,CAACC,IAAI,CAAwB,aAAa,EAAED,IAAI,CAAC;EAC9D;EACAG,UAAUA,CAACH,IAA2B,EAAE;IACtC,OAAO,IAAI,CAACC,IAAI,CAAO,SAAS,EAAED,IAAI,CAAC;EACzC;EAEAI,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACN,GAAG,CAAS,QAAQ,CAAC;EACnC;EAEAO,aAAaA,CAACL,IAA8B,EAAE;IAC5C,OAAO,IAAI,CAACC,IAAI,CAAO,gBAAgB,EAAED,IAAI,CAAC;EAChD;EAEAM,cAAcA,CAACN,IAA+B,EAAE;IAC9C,OAAO,IAAI,CAACC,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EAC3C;EAEAO,cAAcA,CAACP,IAA+B,EAAE;IAC9C,OAAO,IAAI,CAACC,IAAI,CAAO,iBAAiB,EAAED,IAAI,CAAC;EACjD;EAEAQ,2BAA2BA,CAAA,EAAG;IAC5B,OAAO,IAAI,CAACP,IAAI,CAAO,wBAAwB,CAAC;EAClD;EAEAQ,UAAUA,CAACT,IAA8B,EAAE;IACzC,OAAO,IAAI,CAACC,IAAI,CAAO,gBAAgB,EAAED,IAAI,CAAC;EAChD;EAEAU,UAAUA,CAACV,IAAmB,EAAE;IAC9B,OAAO,IAAI,CAACW,KAAK,CAAO,GAAG,EAAEX,IAAI,CAAC;EACpC;EAEAY,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACX,IAAI,CAAO,SAAS,CAAC;EACnC;;EAEA;EACAY,WAAWA,CAACC,KAAa,EAAE;IACzB,OAAO,IAAI,CAAChB,GAAG,CAAU,sBAAqBgB,KAAM,EAAC,CAAC;EACxD;EAEAC,eAAeA,CAACC,MAAc,EAAE;IAC9B,OAAO,IAAI,CAAClB,GAAG,CAAU,sBAAqBkB,MAAO,EAAC,CAAC;EACzD;AACF;AACA,MAAMC,WAAW,GAAG,IAAIxB,WAAW,CAAC,CAAC;AACrC,eAAewB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sagisimchi/Documents/GitHub/dent2-client/src/pages/websitePages/HistoryPage.tsx\",\n  _s = $RefreshSig$();\nimport { useRecoilRefresher_UNSTABLE, useRecoilValue } from \"recoil\";\nimport WebsitePageLayout from \"../../components/websites/WebsitePagesLayout\";\nimport { historyStateSelector } from \"../../state/historyState\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport { Button } from \"primereact/button\";\nimport { websiteService } from \"../../core/services/website.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataGridStyled = styled(DataGrid)`\n  background-color: white;\n  border-radius: 13px;\n  border: none !important;\n`;\n_c = DataGridStyled;\nconst HistoryPage = () => {\n  _s();\n  const {\n    websiteId\n  } = useParams();\n  const historyRuns = useRecoilValue(historyStateSelector({\n    websiteId: websiteId\n  }));\n  const refreshHistoryData = useRecoilRefresher_UNSTABLE(historyStateSelector({\n    websiteId: websiteId\n  }));\n  const deleteWebsite = async id => {\n    try {\n      await websiteService.deleteWebsiteById(id);\n      //navigate(\"/\");\n    } catch (err) {}\n  };\n  const columns = [{\n    field: \"createdAt\",\n    headerName: \"Date\",\n    type: \"date\",\n    width: 270,\n    valueFormatter: params => `${new Date(params.value).toDateString()} - ${new Date(params.value).toLocaleTimeString()}`\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 100\n  }, {\n    field: \"failureDescription\",\n    headerName: \"Failure Description\",\n    width: 200\n  }, {\n    field: \"generatedArticles\",\n    headerName: \"Generated Articles\",\n    width: 100\n  }, {\n    field: \"publishedArticles\",\n    headerName: \"Published Articles\",\n    width: 100\n  }, {\n    field: \"workerId\",\n    headerName: \"Worker ID\",\n    width: 200\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WebsitePageLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => deleteWebsite(websiteId),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: refreshHistoryData,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGridStyled, {\n      sortModel: [{\n        field: \"createdAt\",\n        sort: \"desc\"\n      }],\n      columns: columns,\n      rows: historyRuns || [],\n      scrollbarSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HistoryPage, \"HNI/xh+mwIsOMwtWGAsX5EGC4Jc=\", false, function () {\n  return [useParams, useRecoilValue, useRecoilRefresher_UNSTABLE];\n});\n_c2 = HistoryPage;\nexport default HistoryPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DataGridStyled\");\n$RefreshReg$(_c2, \"HistoryPage\");","map":{"version":3,"names":["useRecoilRefresher_UNSTABLE","useRecoilValue","WebsitePageLayout","historyStateSelector","DataGrid","styled","useParams","Button","websiteService","jsxDEV","_jsxDEV","Fragment","_Fragment","DataGridStyled","_c","HistoryPage","_s","websiteId","historyRuns","refreshHistoryData","deleteWebsite","id","deleteWebsiteById","err","columns","field","headerName","type","width","valueFormatter","params","Date","value","toDateString","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sortModel","sort","rows","scrollbarSize","_c2","$RefreshReg$"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/pages/websitePages/HistoryPage.tsx"],"sourcesContent":["import { useRecoilRefresher_UNSTABLE, useRecoilValue } from \"recoil\";\nimport WebsitePageLayout from \"../../components/websites/WebsitePagesLayout\";\nimport { historyStateSelector } from \"../../state/historyState\";\nimport {\n  DataGrid,\n  GridColDef,\n  GridValueFormatterParams,\n} from \"@mui/x-data-grid\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router\";\nimport { Button } from \"primereact/button\";\nimport { websiteService } from \"../../core/services/website.service\";\n\nconst DataGridStyled = styled(DataGrid)`\n  background-color: white;\n  border-radius: 13px;\n  border: none !important;\n`;\n\nconst HistoryPage: React.FC = () => {\n  const { websiteId } = useParams();\n  const historyRuns = useRecoilValue(\n    historyStateSelector({\n      websiteId: websiteId,\n    })\n  );\n  const refreshHistoryData = useRecoilRefresher_UNSTABLE(\n    historyStateSelector({\n      websiteId: websiteId,\n    })\n  );\n\n  const deleteWebsite = async (id: string) => {\n    try {\n      await websiteService.deleteWebsiteById(id);\n      //navigate(\"/\");\n    } catch (err) {}\n  };\n\n  const columns: GridColDef[] = [\n    {\n      field: \"createdAt\",\n      headerName: \"Date\",\n      type: \"date\",\n      width: 270,\n      valueFormatter: (params: GridValueFormatterParams<Date>) =>\n        `${new Date(params.value).toDateString()} - ${new Date(\n          params.value\n        ).toLocaleTimeString()}`,\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 100,\n    },\n    {\n      field: \"failureDescription\",\n      headerName: \"Failure Description\",\n      width: 200,\n    },\n    {\n      field: \"generatedArticles\",\n      headerName: \"Generated Articles\",\n      width: 100,\n    },\n    {\n      field: \"publishedArticles\",\n      headerName: \"Published Articles\",\n      width: 100,\n    },\n    {\n      field: \"workerId\",\n      headerName: \"Worker ID\",\n      width: 200,\n    },\n  ];\n  return (\n    <>\n      <WebsitePageLayout />\n      <Button onClick={() => deleteWebsite(websiteId as string)}>Delete</Button>\n      <Button onClick={refreshHistoryData}>Refresh</Button>\n\n      <DataGridStyled\n        sortModel={[\n          {\n            field: \"createdAt\",\n            sort: \"desc\",\n          },\n        ]}\n        columns={columns}\n        rows={historyRuns || []}\n        scrollbarSize={10}\n      />\n    </>\n  );\n};\n\nexport default HistoryPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
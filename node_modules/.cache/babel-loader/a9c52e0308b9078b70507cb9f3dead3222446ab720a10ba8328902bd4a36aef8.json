{"ast":null,"code":"var _jsxFileName = \"/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/website/overview/contentCards/ContentCard.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport Card from \"../../../common/Card\";\nimport { ContentCardIcons } from \"./iconMappings\";\nimport { useMemo } from \"react\";\nimport { Theme } from \"../../../../core/theme/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardStyled = styled(Card)`\n  display: flex;\n  border: 1px solid var(--input-border-color, #e6e6e6);\n  flex-direction: column;\n  padding: 12px;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid var(--title-color, #e6e6e6);\n  }\n`;\n_c = CardStyled;\nconst ImageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 13px;\n  margin-bottom: 12px;\n  img {\n    width: 100%;\n  }\n`;\n_c2 = ImageWrapper;\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c3 = TextWrapper;\nconst BoxTitle = styled.span`\n  color: var(--title-color, #0a2540);\n\n  leading-trim: both;\n  text-edge: cap;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 100%; /* 1rem */\n  letter-spacing: -0.03rem;\n`;\n_c4 = BoxTitle;\nconst BoxDesc = styled.span`\n  color: var(--title-color, #0a2540);\n  text-align: right;\n  leading-trim: both;\n  text-edge: cap;\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 100%; /* 0.875rem */\n  letter-spacing: -0.02625rem;\n`;\n_c5 = BoxDesc;\nconst IconWrapper = styled.div`\n  margin-top: 30px;\n`;\n_c6 = IconWrapper;\nconst ContentCard = props => {\n  _s();\n  const title = useMemo(() => props.highlightTitleTerm ? props.title.replace(new RegExp(props.highlightTitleTerm, \"gi\"), match => `<span style='background-color:${Theme.colors.purpleOpacity};'>${match}</span>`) : props.title, [props.title, props.highlightTitleTerm]);\n  const titleHtml = useMemo(() => ({\n    __html: title\n  }), [title]);\n  const IconComponent = ContentCardIcons[props.type];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CardStyled, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(BoxTitle, {\n          dangerouslySetInnerHTML: titleHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BoxDesc, {\n          ...props,\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(IconComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ContentCard, \"pkIffpJpFdlFKACpK4T2jUcWS/8=\");\n_c7 = ContentCard;\nexport default ContentCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"CardStyled\");\n$RefreshReg$(_c2, \"ImageWrapper\");\n$RefreshReg$(_c3, \"TextWrapper\");\n$RefreshReg$(_c4, \"BoxTitle\");\n$RefreshReg$(_c5, \"BoxDesc\");\n$RefreshReg$(_c6, \"IconWrapper\");\n$RefreshReg$(_c7, \"ContentCard\");","map":{"version":3,"names":["styled","Card","ContentCardIcons","useMemo","Theme","jsxDEV","_jsxDEV","Fragment","_Fragment","CardStyled","_c","ImageWrapper","div","_c2","TextWrapper","_c3","BoxTitle","span","_c4","BoxDesc","_c5","IconWrapper","_c6","ContentCard","props","_s","title","highlightTitleTerm","replace","RegExp","match","colors","purpleOpacity","titleHtml","__html","IconComponent","type","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","description","_c7","$RefreshReg$"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/website/overview/contentCards/ContentCard.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport Card from \"../../../common/Card\";\nimport { ContentCardIcons, ContentCardIconKey } from \"./iconMappings\";\nimport { ContentCardType } from \"./cardTypes\";\nimport { useMemo } from \"react\";\nimport { Theme } from \"../../../../core/theme/theme\";\n\ntype iconColor = \"green\" | \"purple\";\n\ninterface Props {\n  title: string;\n  image: string;\n  description: string;\n  type: ContentCardType | any; // Add 'type' property with ContentCardType type\n  highlightTitleTerm?: string;\n}\n\nconst CardStyled = styled(Card)<Props>`\n  display: flex;\n  border: 1px solid var(--input-border-color, #e6e6e6);\n  flex-direction: column;\n  padding: 12px;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid var(--title-color, #e6e6e6);\n  }\n`;\n\nconst ImageWrapper = styled.div<Props>`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 13px;\n  margin-bottom: 12px;\n  img {\n    width: 100%;\n  }\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst BoxTitle = styled.span`\n  color: var(--title-color, #0a2540);\n\n  leading-trim: both;\n  text-edge: cap;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 100%; /* 1rem */\n  letter-spacing: -0.03rem;\n`;\n\nconst BoxDesc = styled.span<Props>`\n  color: var(--title-color, #0a2540);\n  text-align: right;\n  leading-trim: both;\n  text-edge: cap;\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 100%; /* 0.875rem */\n  letter-spacing: -0.02625rem;\n`;\n\nconst IconWrapper = styled.div`\n  margin-top: 30px;\n`;\n\nconst ContentCard: React.FC<Props> = (props) => {\n  const title = useMemo(\n    () =>\n      props.highlightTitleTerm\n        ? props.title.replace(\n            new RegExp(props.highlightTitleTerm, \"gi\"),\n            (match) =>\n              `<span style='background-color:${Theme.colors.purpleOpacity};'>${match}</span>`\n          )\n        : props.title,\n    [props.title, props.highlightTitleTerm]\n  );\n\n  const titleHtml = useMemo(\n    () => ({\n      __html: title,\n    }),\n    [title]\n  );\n\n  const IconComponent = ContentCardIcons[props.type as ContentCardIconKey];\n  return (\n    <>\n      <CardStyled {...props}>\n        <ImageWrapper {...props}>\n          <img src={props.image} alt=\"icon\" />\n        </ImageWrapper>\n\n        <TextWrapper>\n          <BoxTitle dangerouslySetInnerHTML={titleHtml}></BoxTitle>\n          <BoxDesc {...props}>{props.description}</BoxDesc>\n        </TextWrapper>\n        <IconWrapper>\n          <IconComponent /> {/* Render the correct icon component */}\n        </IconWrapper>\n      </CardStyled>\n    </>\n  );\n};\n\nexport default ContentCard;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,gBAAgB,QAA4B,gBAAgB;AAErE,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,KAAK,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAYrD,MAAMC,UAAU,GAAGT,MAAM,CAACC,IAAI,CAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,EAAA,GAVID,UAAU;AAYhB,MAAME,YAAY,GAAGX,MAAM,CAACY,GAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,YAAY;AAYlB,MAAMG,WAAW,GAAGd,MAAM,CAACY,GAAI;AAC/B;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,WAAW;AAMjB,MAAME,QAAQ,GAAGhB,MAAM,CAACiB,IAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,QAAQ;AAYd,MAAMG,OAAO,GAAGnB,MAAM,CAACiB,IAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAVID,OAAO;AAYb,MAAME,WAAW,GAAGrB,MAAM,CAACY,GAAI;AAC/B;AACA,CAAC;AAACU,GAAA,GAFID,WAAW;AAIjB,MAAME,WAA4B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9C,MAAMC,KAAK,GAAGvB,OAAO,CACnB,MACEqB,KAAK,CAACG,kBAAkB,GACpBH,KAAK,CAACE,KAAK,CAACE,OAAO,CACjB,IAAIC,MAAM,CAACL,KAAK,CAACG,kBAAkB,EAAE,IAAI,CAAC,EACzCG,KAAK,IACH,iCAAgC1B,KAAK,CAAC2B,MAAM,CAACC,aAAc,MAAKF,KAAM,SAC3E,CAAC,GACDN,KAAK,CAACE,KAAK,EACjB,CAACF,KAAK,CAACE,KAAK,EAAEF,KAAK,CAACG,kBAAkB,CACxC,CAAC;EAED,MAAMM,SAAS,GAAG9B,OAAO,CACvB,OAAO;IACL+B,MAAM,EAAER;EACV,CAAC,CAAC,EACF,CAACA,KAAK,CACR,CAAC;EAED,MAAMS,aAAa,GAAGjC,gBAAgB,CAACsB,KAAK,CAACY,IAAI,CAAuB;EACxE,oBACE9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACE/B,OAAA,CAACG,UAAU;MAAA,GAAKe,KAAK;MAAAa,QAAA,gBACnB/B,OAAA,CAACK,YAAY;QAAA,GAAKa,KAAK;QAAAa,QAAA,eACrB/B,OAAA;UAAKgC,GAAG,EAAEd,KAAK,CAACe,KAAM;UAACC,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEftC,OAAA,CAACQ,WAAW;QAAAuB,QAAA,gBACV/B,OAAA,CAACU,QAAQ;UAAC6B,uBAAuB,EAAEZ;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACzDtC,OAAA,CAACa,OAAO;UAAA,GAAKK,KAAK;UAAAa,QAAA,EAAGb,KAAK,CAACsB;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACdtC,OAAA,CAACe,WAAW;QAAAgB,QAAA,gBACV/B,OAAA,CAAC6B,aAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACb,CAAC;AAEP,CAAC;AAACnB,EAAA,CAtCIF,WAA4B;AAAAwB,GAAA,GAA5BxB,WAA4B;AAwClC,eAAeA,WAAW;AAAC,IAAAb,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAAtC,EAAA;AAAAsC,YAAA,CAAAnC,GAAA;AAAAmC,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
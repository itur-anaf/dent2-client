{"ast":null,"code":"import { ServiceBase } from \"./service.base\";\nclass PublisherService extends ServiceBase {\n  constructor() {\n    super(...arguments);\n    this.prefix = \"/publisher\";\n  }\n  async listPublishIntegrations() {\n    return await this.get();\n  }\n  async publishArticleById(data, websiteId) {\n    return await this.post(\"/publish\", {\n      ...data,\n      websiteId\n    });\n  }\n  updateArticleById(articleId, websiteId) {\n    return this.patch(\"/update\", {\n      articleId,\n      websiteId\n    });\n  }\n  createPublishIntegration(publishIntegration) {\n    return this.post(\"/\", publishIntegration);\n  }\n  async getPublishIntegrationByWebsiteId(websiteId) {\n    return await this.get(`/${websiteId}`);\n  }\n  async updatePublishIntegrationById(publishIntegrationId, data) {\n    return await this.patch(`/${publishIntegrationId}`, data);\n  }\n  async deletePublishIntegrationById(publishIntegrationId) {\n    return await this.delete(`/${publishIntegrationId}`);\n  }\n}\nexport const publisherService = new PublisherService();","map":{"version":3,"names":["ServiceBase","PublisherService","constructor","arguments","prefix","listPublishIntegrations","get","publishArticleById","data","websiteId","post","updateArticleById","articleId","patch","createPublishIntegration","publishIntegration","getPublishIntegrationByWebsiteId","updatePublishIntegrationById","publishIntegrationId","deletePublishIntegrationById","delete","publisherService"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/core/services/publisher.service.ts"],"sourcesContent":["import { Article } from \"../entities/article\";\nimport { PublishIntegration } from \"../entities/publishIntegration\";\nimport { CreateWebsiteRequestData } from \"./requests/createWebsite/createWebsiteRequestData\";\nimport { PublishArticleRequest } from \"./requests/publish/publishArticleRequest\";\nimport { ServiceBase } from \"./service.base\";\n\nclass PublisherService extends ServiceBase {\n  prefix = \"/publisher\";\n\n  async listPublishIntegrations() {\n    return await this.get<PublishIntegration[]>();\n  }\n\n  async publishArticleById(data: PublishArticleRequest, websiteId: string) {\n    return await this.post<Article>(\"/publish\", {\n      ...data,\n      websiteId,\n    });\n  }\n\n  updateArticleById(articleId: string, websiteId: string) {\n    return this.patch(\"/update\", {\n      articleId,\n      websiteId,\n    });\n  }\n\n  createPublishIntegration(publishIntegration: Partial<PublishIntegration>) {\n    return this.post<PublishIntegration>(\"/\", publishIntegration);\n  }\n\n  async getPublishIntegrationByWebsiteId(websiteId: string) {\n    return await this.get<PublishIntegration>(`/${websiteId}`);\n  }\n\n  async updatePublishIntegrationById(\n    publishIntegrationId: string,\n    data: Partial<PublishIntegration>\n  ) {\n    return await this.patch(`/${publishIntegrationId}`, data);\n  }\n\n  async deletePublishIntegrationById(publishIntegrationId: string) {\n    return await this.delete<void>(`/${publishIntegrationId}`);\n  }\n}\nexport const publisherService = new PublisherService();\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,gBAAgB,SAASD,WAAW,CAAC;EAAAE,YAAA;IAAA,SAAAC,SAAA;IAAA,KACzCC,MAAM,GAAG,YAAY;EAAA;EAErB,MAAMC,uBAAuBA,CAAA,EAAG;IAC9B,OAAO,MAAM,IAAI,CAACC,GAAG,CAAuB,CAAC;EAC/C;EAEA,MAAMC,kBAAkBA,CAACC,IAA2B,EAAEC,SAAiB,EAAE;IACvE,OAAO,MAAM,IAAI,CAACC,IAAI,CAAU,UAAU,EAAE;MAC1C,GAAGF,IAAI;MACPC;IACF,CAAC,CAAC;EACJ;EAEAE,iBAAiBA,CAACC,SAAiB,EAAEH,SAAiB,EAAE;IACtD,OAAO,IAAI,CAACI,KAAK,CAAC,SAAS,EAAE;MAC3BD,SAAS;MACTH;IACF,CAAC,CAAC;EACJ;EAEAK,wBAAwBA,CAACC,kBAA+C,EAAE;IACxE,OAAO,IAAI,CAACL,IAAI,CAAqB,GAAG,EAAEK,kBAAkB,CAAC;EAC/D;EAEA,MAAMC,gCAAgCA,CAACP,SAAiB,EAAE;IACxD,OAAO,MAAM,IAAI,CAACH,GAAG,CAAsB,IAAGG,SAAU,EAAC,CAAC;EAC5D;EAEA,MAAMQ,4BAA4BA,CAChCC,oBAA4B,EAC5BV,IAAiC,EACjC;IACA,OAAO,MAAM,IAAI,CAACK,KAAK,CAAE,IAAGK,oBAAqB,EAAC,EAAEV,IAAI,CAAC;EAC3D;EAEA,MAAMW,4BAA4BA,CAACD,oBAA4B,EAAE;IAC/D,OAAO,MAAM,IAAI,CAACE,MAAM,CAAQ,IAAGF,oBAAqB,EAAC,CAAC;EAC5D;AACF;AACA,OAAO,MAAMG,gBAAgB,GAAG,IAAIpB,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
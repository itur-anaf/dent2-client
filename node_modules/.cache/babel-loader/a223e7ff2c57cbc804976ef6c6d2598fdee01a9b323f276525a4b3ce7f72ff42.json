{"ast":null,"code":"var _jsxFileName = \"/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/common/form/RadioGroupMulti.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { useFieldArray, useFormContext, useWatch } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RadioButtonGroupWrapper = styled.div`\n  display: flex;\n  column-gap: 10px;\n  row-gap: 10px;\n`;\nfunction getColumnClass(columnNumber) {\n  switch (columnNumber) {\n    case \"1\":\n      return \"col-12\";\n    case \"2\":\n      return \"col-6\";\n    case \"3\":\n      return \"col-4\";\n    case \"4\":\n      return \"col-3\";\n    case \"6\":\n      return \"col-2\";\n    case \"12\":\n      return \"col-1\";\n    default:\n      return \"col-4\";\n    // Default to col-12 if no valid ColumnNumber is provided\n  }\n}\n\nconst RadioOptionWrapper = styled.div`\n  position: relative;\n  /* width: 210px; */\n  min-height: 110px;\n  border-radius: 6px;\n  background: #f6f9fc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #515253;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: -0.6px;\n  text-transform: capitalize;\n  padding: 10px 30px;\n  text-align: center;\n  cursor: pointer;\n  border: 1.5px solid\n    ${props => props.isChecked ? \"var(--primary-purple) !important\" : \"#F6F9FC\"};\n  position: relative;\n  transition-duration: 0.1s;\n\n  &:hover {\n    border-color: var(--title-color);\n  }\n\n  & .checkedicon path {\n    fill: ${props => props.isChecked ? \"var(--primary-purple)\" : \"white\"};\n  }\n  & .checkedicon {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n  }\n`;\n_c = RadioOptionWrapper;\nfunction RadioGroupMulti(_ref) {\n  _s();\n  let {\n    fieldName,\n    options,\n    ColumnNumber,\n    children\n  } = _ref;\n  const {\n    control,\n    formState\n  } = useFormContext();\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: fieldName\n  });\n  const templates = useWatch({\n    control,\n    name: fieldName\n  });\n  const onClick = useCallback(option => {\n    if (templates.includes(option.value)) {\n      if (templates.length === 1) {\n        return;\n      }\n      const index = templates.findIndex(t => t === option.value);\n      remove(index);\n    } else append(option.value);\n  }, [templates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getColumnClass(ColumnNumber),\n        children: /*#__PURE__*/_jsxDEV(RadioOptionWrapper, {\n          className: `singleradio ${option.value}`,\n          onClick: () => onClick(option),\n          isChecked: templates.includes(option.value),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"checkedicon\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 13 12\",\n            fill: \"none\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5.6371 8.44536L9.57654 4.50592L8.70186 3.63124L5.6371 6.696L4.1454 5.20431L3.28429 6.07898L5.6371 8.44536ZM6.46027 11.5033C5.67276 11.5033 4.93254 11.3549 4.23961 11.0579C3.54669 10.7609 2.94226 10.3541 2.42634 9.83726C1.91043 9.32045 1.50405 8.71681 1.20722 8.02635C0.910382 7.3359 0.761963 6.59728 0.761963 5.8105C0.761963 5.01395 0.910441 4.26921 1.2074 3.57628C1.50435 2.88336 1.91052 2.27983 2.42591 1.7657C2.94131 1.25156 3.54456 0.845182 4.23568 0.546562C4.9268 0.247943 5.66613 0.0986328 6.45366 0.0986328C7.25097 0.0986328 7.99665 0.248187 8.6907 0.547295C9.38475 0.846403 9.98847 1.25234 10.5019 1.7651C11.0153 2.27786 11.4211 2.88027 11.7193 3.57234C12.0176 4.26439 12.1667 5.00925 12.1667 5.8069C12.1667 6.59565 12.0173 7.33642 11.7186 8.0292C11.4198 8.72198 11.0129 9.32578 10.4979 9.8406C9.98288 10.3554 9.38014 10.7613 8.68968 11.0581C7.99923 11.3549 7.25609 11.5033 6.46027 11.5033Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), option.render]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(RadioGroupMulti, \"btdb37YGwRjm1T/MGgSlpycxscc=\", false, function () {\n  return [useFormContext, useFieldArray, useWatch];\n});\n_c2 = RadioGroupMulti;\nexport default RadioGroupMulti;\nvar _c, _c2;\n$RefreshReg$(_c, \"RadioOptionWrapper\");\n$RefreshReg$(_c2, \"RadioGroupMulti\");","map":{"version":3,"names":["React","useCallback","useFieldArray","useFormContext","useWatch","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","RadioButtonGroupWrapper","div","getColumnClass","columnNumber","RadioOptionWrapper","props","isChecked","_c","RadioGroupMulti","_ref","_s","fieldName","options","ColumnNumber","children","control","formState","fields","append","remove","name","templates","onClick","option","includes","value","length","index","findIndex","t","className","map","xmlns","width","height","viewBox","fill","d","fileName","_jsxFileName","lineNumber","render","_c2","$RefreshReg$"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/common/form/RadioGroupMulti.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport {\n  Controller,\n  FieldValues,\n  Path,\n  useFieldArray,\n  useFormContext,\n  useWatch,\n} from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { Option } from \"./types/option\";\nimport ErrorMessage from \"../ErrorMessage\";\n\nconst RadioButtonGroupWrapper = styled.div`\n  display: flex;\n  column-gap: 10px;\n  row-gap: 10px;\n`;\n\ninterface Props<T> {\n  options: Option[];\n  fieldName: Path<T>;\n  ColumnNumber?: \"1\" | \"2\" | \"3\" | \"4\" | \"6\" | \"12\";\n  children?: JSX.Element | JSX.Element[] | string;\n}\n\nfunction getColumnClass(columnNumber?: Props<any>[\"ColumnNumber\"]): string {\n  switch (columnNumber) {\n    case \"1\":\n      return \"col-12\";\n    case \"2\":\n      return \"col-6\";\n    case \"3\":\n      return \"col-4\";\n    case \"4\":\n      return \"col-3\";\n    case \"6\":\n      return \"col-2\";\n    case \"12\":\n      return \"col-1\";\n    default:\n      return \"col-4\"; // Default to col-12 if no valid ColumnNumber is provided\n  }\n}\n\nconst RadioOptionWrapper = styled.div<{ isChecked?: boolean }>`\n  position: relative;\n  /* width: 210px; */\n  min-height: 110px;\n  border-radius: 6px;\n  background: #f6f9fc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #515253;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: -0.6px;\n  text-transform: capitalize;\n  padding: 10px 30px;\n  text-align: center;\n  cursor: pointer;\n  border: 1.5px solid\n    ${(props) =>\n      props.isChecked ? \"var(--primary-purple) !important\" : \"#F6F9FC\"};\n  position: relative;\n  transition-duration: 0.1s;\n\n  &:hover {\n    border-color: var(--title-color);\n  }\n\n  & .checkedicon path {\n    fill: ${(props) => (props.isChecked ? \"var(--primary-purple)\" : \"white\")};\n  }\n  & .checkedicon {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n  }\n`;\n\nfunction RadioGroupMulti<FormDataType extends FieldValues>({\n  fieldName,\n  options,\n  ColumnNumber,\n  children,\n}: Props<FormDataType>) {\n  const { control, formState } = useFormContext();\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: fieldName,\n  });\n\n  const templates = useWatch({ control, name: fieldName }) as string[];\n\n  const onClick = useCallback(\n    (option: Option) => {\n      if (templates.includes(option.value as any)) {\n        if (templates.length === 1) {\n          return;\n        }\n        const index = templates.findIndex((t) => t === option.value);\n        remove(index);\n      } else append(option.value as any);\n    },\n    [templates]\n  );\n\n  return (\n    <div className=\"grid\">\n      <>\n        {options.map((option: Option) => (\n          <div key={option.value} className={getColumnClass(ColumnNumber)}>\n            <RadioOptionWrapper\n              className={`singleradio ${option.value}`}\n              onClick={() => onClick(option)}\n              isChecked={templates.includes(option.value)}\n            >\n              <svg\n                className=\"checkedicon\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 13 12\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M5.6371 8.44536L9.57654 4.50592L8.70186 3.63124L5.6371 6.696L4.1454 5.20431L3.28429 6.07898L5.6371 8.44536ZM6.46027 11.5033C5.67276 11.5033 4.93254 11.3549 4.23961 11.0579C3.54669 10.7609 2.94226 10.3541 2.42634 9.83726C1.91043 9.32045 1.50405 8.71681 1.20722 8.02635C0.910382 7.3359 0.761963 6.59728 0.761963 5.8105C0.761963 5.01395 0.910441 4.26921 1.2074 3.57628C1.50435 2.88336 1.91052 2.27983 2.42591 1.7657C2.94131 1.25156 3.54456 0.845182 4.23568 0.546562C4.9268 0.247943 5.66613 0.0986328 6.45366 0.0986328C7.25097 0.0986328 7.99665 0.248187 8.6907 0.547295C9.38475 0.846403 9.98847 1.25234 10.5019 1.7651C11.0153 2.27786 11.4211 2.88027 11.7193 3.57234C12.0176 4.26439 12.1667 5.00925 12.1667 5.8069C12.1667 6.59565 12.0173 7.33642 11.7186 8.0292C11.4198 8.72198 11.0129 9.32578 10.4979 9.8406C9.98288 10.3554 9.38014 10.7613 8.68968 11.0581C7.99923 11.3549 7.25609 11.5033 6.46027 11.5033Z\"\n                  fill=\"white\"\n                />\n              </svg>\n              {option.render}\n            </RadioOptionWrapper>\n          </div>\n        ))}\n      </>\n      {children}\n    </div>\n  );\n}\n\nexport default RadioGroupMulti;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nfunction useMultiStepForm(steps, onSubmitCallback, initialValues) {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [progressPercentage, setProgressPercentage] = useState(33.5);\n  const [isLoading, setIsLoading] = useState(false);\n  const methods = useForm({\n    defaultValues: initialValues\n  });\n  const watchValues = methods.watch(steps[activeStep].fields);\n  const progressUnit = useMemo(() => 100 / steps.length, []);\n  useEffect(() => {\n    methods.trigger(steps[activeStep].fields);\n  }, [...watchValues, activeStep]);\n  const component = useMemo(() => steps[activeStep].component, [activeStep]);\n  const navigateNextStep = () => {\n    setActiveStep(prevStep => prevStep + 1);\n    setProgressPercentage(prevPercentage => prevPercentage + progressUnit);\n  };\n  const navigatePrevStep = () => {\n    setActiveStep(prevStep => prevStep - 1);\n    setProgressPercentage(prevPercentage => prevPercentage - progressUnit);\n  };\n  const onClickNextButton = async () => {\n    if (methods.formState.isValid) {\n      if (activeStep < steps.length - 1) {\n        navigateNextStep();\n      } else {\n        await onSubmitCallback();\n      }\n    }\n  };\n  const onSubmit = async () => {\n    setIsLoading(true);\n    try {\n      await onSubmitCallback();\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    methods,\n    activeStep,\n    progressPercentage,\n    isLoading,\n    showBackButton: activeStep > 0,\n    component,\n    onClickNextButton,\n    onSubmit,\n    navigateNextStep,\n    navigatePrevStep\n  };\n}\n_s(useMultiStepForm, \"QECN8xJMJt+RLDStneYSDVgl/+A=\", false, function () {\n  return [useForm];\n});\nexport default useMultiStepForm;","map":{"version":3,"names":["useEffect","useMemo","useState","useForm","useMultiStepForm","steps","onSubmitCallback","initialValues","_s","activeStep","setActiveStep","progressPercentage","setProgressPercentage","isLoading","setIsLoading","methods","defaultValues","watchValues","watch","fields","progressUnit","length","trigger","component","navigateNextStep","prevStep","prevPercentage","navigatePrevStep","onClickNextButton","formState","isValid","onSubmit","err","console","log","showBackButton"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/hooks/useMultiStepForm.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport {\n  FieldValues,\n  useForm,\n  DeepPartial,\n  DefaultValues,\n} from \"react-hook-form\";\nimport FormStepType from \"../components/common/form/types/formStepType\";\n\nfunction useMultiStepForm<FormType extends DeepPartial<FieldValues>>(\n  steps: FormStepType<FormType>[],\n  onSubmitCallback: any,\n  initialValues?: DefaultValues<FormType>\n) {\n  const [activeStep, setActiveStep] = useState(0);\n  const [progressPercentage, setProgressPercentage] = useState(33.5);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const methods = useForm<FormType>({\n    defaultValues: initialValues,\n  });\n\n  const watchValues = methods.watch(steps[activeStep].fields as any);\n\n  const progressUnit = useMemo(() => 100 / steps.length, []);\n\n  useEffect(() => {\n    methods.trigger(steps[activeStep].fields);\n  }, [...watchValues, activeStep]);\n\n  const component = useMemo(() => steps[activeStep].component, [activeStep]);\n\n  const navigateNextStep = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n    setProgressPercentage((prevPercentage) => prevPercentage + progressUnit);\n  };\n\n  const navigatePrevStep = () => {\n    setActiveStep((prevStep) => prevStep - 1);\n    setProgressPercentage((prevPercentage) => prevPercentage - progressUnit);\n  };\n\n  const onClickNextButton = async () => {\n    if (methods.formState.isValid) {\n      if (activeStep < steps.length - 1) {\n        navigateNextStep();\n      } else {\n        await onSubmitCallback();\n      }\n    }\n  };\n\n  const onSubmit = async () => {\n    setIsLoading(true);\n    try {\n      await onSubmitCallback();\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    methods,\n    activeStep,\n    progressPercentage,\n    isLoading,\n    showBackButton: activeStep > 0,\n    component,\n    onClickNextButton,\n    onSubmit,\n    navigateNextStep,\n    navigatePrevStep,\n  };\n}\nexport default useMultiStepForm;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAEEC,OAAO,QAGF,iBAAiB;AAGxB,SAASC,gBAAgBA,CACvBC,KAA+B,EAC/BC,gBAAqB,EACrBC,aAAuC,EACvC;EAAAC,EAAA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,OAAO,GAAGZ,OAAO,CAAW;IAChCa,aAAa,EAAET;EACjB,CAAC,CAAC;EAEF,MAAMU,WAAW,GAAGF,OAAO,CAACG,KAAK,CAACb,KAAK,CAACI,UAAU,CAAC,CAACU,MAAa,CAAC;EAElE,MAAMC,YAAY,GAAGnB,OAAO,CAAC,MAAM,GAAG,GAAGI,KAAK,CAACgB,MAAM,EAAE,EAAE,CAAC;EAE1DrB,SAAS,CAAC,MAAM;IACde,OAAO,CAACO,OAAO,CAACjB,KAAK,CAACI,UAAU,CAAC,CAACU,MAAM,CAAC;EAC3C,CAAC,EAAE,CAAC,GAAGF,WAAW,EAAER,UAAU,CAAC,CAAC;EAEhC,MAAMc,SAAS,GAAGtB,OAAO,CAAC,MAAMI,KAAK,CAACI,UAAU,CAAC,CAACc,SAAS,EAAE,CAACd,UAAU,CAAC,CAAC;EAE1E,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bd,aAAa,CAAEe,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACzCb,qBAAqB,CAAEc,cAAc,IAAKA,cAAc,GAAGN,YAAY,CAAC;EAC1E,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BjB,aAAa,CAAEe,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACzCb,qBAAqB,CAAEc,cAAc,IAAKA,cAAc,GAAGN,YAAY,CAAC;EAC1E,CAAC;EAED,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIb,OAAO,CAACc,SAAS,CAACC,OAAO,EAAE;MAC7B,IAAIrB,UAAU,GAAGJ,KAAK,CAACgB,MAAM,GAAG,CAAC,EAAE;QACjCG,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACL,MAAMlB,gBAAgB,CAAC,CAAC;MAC1B;IACF;EACF,CAAC;EAED,MAAMyB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3BjB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMR,gBAAgB,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAO0B,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IACLC,OAAO;IACPN,UAAU;IACVE,kBAAkB;IAClBE,SAAS;IACTsB,cAAc,EAAE1B,UAAU,GAAG,CAAC;IAC9Bc,SAAS;IACTK,iBAAiB;IACjBG,QAAQ;IACRP,gBAAgB;IAChBG;EACF,CAAC;AACH;AAACnB,EAAA,CAlEQJ,gBAAgB;EAAA,QASPD,OAAO;AAAA;AA0DzB,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
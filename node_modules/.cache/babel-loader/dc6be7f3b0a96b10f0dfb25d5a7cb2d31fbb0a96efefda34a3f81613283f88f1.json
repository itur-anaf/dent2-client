{"ast":null,"code":"import { ServiceBase } from \"./service.base\";\nclass DocumentService extends ServiceBase {\n  constructor() {\n    super(...arguments);\n    this.prefix = \"/document\";\n  }\n  getDocumentById(documentId) {\n    return this.get(`/${documentId}`);\n  }\n  getDocumentsByWebsiteId(websiteId) {\n    return this.get(`/website/${websiteId}`);\n  }\n  createDocument(docType, websiteId) {\n    return this.post(`/`, {\n      docType,\n      websiteId\n    });\n  }\n  updateDocument(document) {\n    return this.post(`/update/${document.id}`, document);\n  }\n  generateDocument(documentId, params) {\n    return this.post(`/generate/${documentId}`, params);\n  }\n}\nconst documentService = new DocumentService();\nexport default documentService;","map":{"version":3,"names":["ServiceBase","DocumentService","constructor","arguments","prefix","getDocumentById","documentId","get","getDocumentsByWebsiteId","websiteId","createDocument","docType","post","updateDocument","document","id","generateDocument","params","documentService"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/core/services/document.service.ts"],"sourcesContent":["import { ServiceBase } from \"./service.base\";\nimport { DocumentEntity, DocumentEntityType } from \"neword-core\";\n\nclass DocumentService extends ServiceBase {\n  prefix = \"/document\";\n\n  getDocumentById<T extends DocumentEntityType>(documentId: string) {\n    return this.get<DocumentEntity<T>>(`/${documentId}`);\n  }\n\n  getDocumentsByWebsiteId<T extends DocumentEntityType>(websiteId: string) {\n    return this.get<DocumentEntity<T>[]>(`/website/${websiteId}`);\n  }\n\n  createDocument(docType: DocumentEntityType, websiteId: string) {\n    return this.post<string>(`/`, { docType, websiteId });\n  }\n\n  updateDocument<T extends DocumentEntityType>(document: DocumentEntity<T>) {\n    return this.post<DocumentEntity<T>>(`/update/${document.id}`, document);\n  }\n\n  generateDocument<T extends DocumentEntityType>(\n    documentId: string,\n    params: DocumentEntity<T>[\"inputParams\"]\n  ) {\n    return this.post<DocumentEntity<T>>(`/generate/${documentId}`, params);\n  }\n}\nconst documentService = new DocumentService();\nexport default documentService;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAG5C,MAAMC,eAAe,SAASD,WAAW,CAAC;EAAAE,YAAA;IAAA,SAAAC,SAAA;IAAA,KACxCC,MAAM,GAAG,WAAW;EAAA;EAEpBC,eAAeA,CAA+BC,UAAkB,EAAE;IAChE,OAAO,IAAI,CAACC,GAAG,CAAqB,IAAGD,UAAW,EAAC,CAAC;EACtD;EAEAE,uBAAuBA,CAA+BC,SAAiB,EAAE;IACvE,OAAO,IAAI,CAACF,GAAG,CAAuB,YAAWE,SAAU,EAAC,CAAC;EAC/D;EAEAC,cAAcA,CAACC,OAA2B,EAAEF,SAAiB,EAAE;IAC7D,OAAO,IAAI,CAACG,IAAI,CAAU,GAAE,EAAE;MAAED,OAAO;MAAEF;IAAU,CAAC,CAAC;EACvD;EAEAI,cAAcA,CAA+BC,QAA2B,EAAE;IACxE,OAAO,IAAI,CAACF,IAAI,CAAqB,WAAUE,QAAQ,CAACC,EAAG,EAAC,EAAED,QAAQ,CAAC;EACzE;EAEAE,gBAAgBA,CACdV,UAAkB,EAClBW,MAAwC,EACxC;IACA,OAAO,IAAI,CAACL,IAAI,CAAqB,aAAYN,UAAW,EAAC,EAAEW,MAAM,CAAC;EACxE;AACF;AACA,MAAMC,eAAe,GAAG,IAAIjB,eAAe,CAAC,CAAC;AAC7C,eAAeiB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
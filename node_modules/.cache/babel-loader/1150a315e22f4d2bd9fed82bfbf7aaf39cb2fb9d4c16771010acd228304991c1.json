{"ast":null,"code":"var _jsxFileName = \"/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/common/form/RadioGroup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RadioButtonGroupWrapper = styled.div`\n  display: flex;\n  column-gap: 10px;\n  row-gap: 10px;\n`;\nfunction getColumnClass(columnNumber) {\n  switch (columnNumber) {\n    case \"1\":\n      return \"col-12\";\n    case \"2\":\n      return \"col-6\";\n    case \"3\":\n      return \"col-4\";\n    case \"4\":\n      return \"col-3\";\n    case \"6\":\n      return \"col-2\";\n    case \"12\":\n      return \"col-1\";\n    default:\n      return \"col-4\";\n    // Default to col-12 if no valid ColumnNumber is provided\n  }\n}\n\nconst RadioOptionWrapper = styled.div`\n  position: relative;\n  /* width: 210px; */\n  min-height: 110px;\n  border-radius: 12px;\n  background: #f6f9fc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #515253;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: -0.6px;\n  text-transform: capitalize;\n  padding: 10px 30px;\n  text-align: center;\n  cursor: pointer;\n  border: 1px solid\n    ${props => props.isChecked ? \"var(--primary-purple) !important\" : \"var(--border-color)\"};\n  position: relative;\n  transition-duration: 0.1s;\n\n  &:hover {\n    border-color: var(--title-color);\n  }\n\n  & .checkedicon path {\n    fill: ${props => props.isChecked ? \"var(--primary-purple) !important\" : \"white\"};\n  }\n  & .checkedicon {\n    position: absolute;\n    left: 10px;\n    top: 10px;\n  }\n`;\n_c = RadioOptionWrapper;\nfunction RadioGroup(_ref) {\n  _s();\n  let {\n    fieldName,\n    options,\n    ColumnNumber,\n    children\n  } = _ref;\n  const {\n    control,\n    setValue\n  } = useFormContext();\n  useEffect(() => {\n    if (options.length === 1) {\n      setValue(fieldName, options[0].value);\n    }\n  }, [options, fieldName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      name: fieldName,\n      control: control,\n      rules: {\n        required: true\n      },\n      render: _ref2 => {\n        let {\n          fieldState,\n          field\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getColumnClass(ColumnNumber),\n            children: /*#__PURE__*/_jsxDEV(RadioOptionWrapper, {\n              className: `singleradio ${option.value} ${option.value === field.value ? option.value : \"\"}`,\n              onClick: () => field.onChange(option.value),\n              isChecked: option.value === field.value,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"checkedicon\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 13 12\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M5.6371 8.44536L9.57654 4.50592L8.70186 3.63124L5.6371 6.696L4.1454 5.20431L3.28429 6.07898L5.6371 8.44536ZM6.46027 11.5033C5.67276 11.5033 4.93254 11.3549 4.23961 11.0579C3.54669 10.7609 2.94226 10.3541 2.42634 9.83726C1.91043 9.32045 1.50405 8.71681 1.20722 8.02635C0.910382 7.3359 0.761963 6.59728 0.761963 5.8105C0.761963 5.01395 0.910441 4.26921 1.2074 3.57628C1.50435 2.88336 1.91052 2.27983 2.42591 1.7657C2.94131 1.25156 3.54456 0.845182 4.23568 0.546562C4.9268 0.247943 5.66613 0.0986328 6.45366 0.0986328C7.25097 0.0986328 7.99665 0.248187 8.6907 0.547295C9.38475 0.846403 9.98847 1.25234 10.5019 1.7651C11.0153 2.27786 11.4211 2.88027 11.7193 3.57234C12.0176 4.26439 12.1667 5.00925 12.1667 5.8069C12.1667 6.59565 12.0173 7.33642 11.7186 8.0292C11.4198 8.72198 11.0129 9.32578 10.4979 9.8406C9.98288 10.3554 9.38014 10.7613 8.68968 11.0581C7.99923 11.3549 7.25609 11.5033 6.46027 11.5033Z\",\n                  fill: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), option.render]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(RadioGroup, \"UMeySBjp/QT+lmQECuhA40h2M5w=\", false, function () {\n  return [useFormContext];\n});\n_c2 = RadioGroup;\nexport default RadioGroup;\nvar _c, _c2;\n$RefreshReg$(_c, \"RadioOptionWrapper\");\n$RefreshReg$(_c2, \"RadioGroup\");","map":{"version":3,"names":["React","useEffect","Controller","useFormContext","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","RadioButtonGroupWrapper","div","getColumnClass","columnNumber","RadioOptionWrapper","props","isChecked","_c","RadioGroup","_ref","_s","fieldName","options","ColumnNumber","children","control","setValue","length","value","className","name","rules","required","render","_ref2","fieldState","field","map","option","onClick","onChange","xmlns","width","height","viewBox","fill","d","fileName","_jsxFileName","lineNumber","_c2","$RefreshReg$"],"sources":["/Users/sagisimchi/Documents/GitHub/dent2-client/src/components/common/form/RadioGroup.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Controller, FieldValues, Path, useFormContext } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { Option } from \"./types/option\";\n\nconst RadioButtonGroupWrapper = styled.div`\n  display: flex;\n  column-gap: 10px;\n  row-gap: 10px;\n`;\n\ninterface Props<T> {\n  options: Option[];\n  fieldName: Path<T>;\n  ColumnNumber?: \"1\" | \"2\" | \"3\" | \"4\" | \"6\" | \"12\";\n  children?: JSX.Element | JSX.Element[] | string;\n}\n\nfunction getColumnClass(columnNumber?: Props<any>[\"ColumnNumber\"]): string {\n  switch (columnNumber) {\n    case \"1\":\n      return \"col-12\";\n    case \"2\":\n      return \"col-6\";\n    case \"3\":\n      return \"col-4\";\n    case \"4\":\n      return \"col-3\";\n    case \"6\":\n      return \"col-2\";\n    case \"12\":\n      return \"col-1\";\n    default:\n      return \"col-4\"; // Default to col-12 if no valid ColumnNumber is provided\n  }\n}\n\nconst RadioOptionWrapper = styled.div<{ isChecked?: boolean }>`\n  position: relative;\n  /* width: 210px; */\n  min-height: 110px;\n  border-radius: 12px;\n  background: #f6f9fc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #515253;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: -0.6px;\n  text-transform: capitalize;\n  padding: 10px 30px;\n  text-align: center;\n  cursor: pointer;\n  border: 1px solid\n    ${(props) =>\n      props.isChecked\n        ? \"var(--primary-purple) !important\"\n        : \"var(--border-color)\"};\n  position: relative;\n  transition-duration: 0.1s;\n\n  &:hover {\n    border-color: var(--title-color);\n  }\n\n  & .checkedicon path {\n    fill: ${(props) =>\n      props.isChecked ? \"var(--primary-purple) !important\" : \"white\"};\n  }\n  & .checkedicon {\n    position: absolute;\n    left: 10px;\n    top: 10px;\n  }\n`;\n\nfunction RadioGroup<FormDataType extends FieldValues>({\n  fieldName,\n  options,\n  ColumnNumber,\n  children,\n}: Props<FormDataType>) {\n  const { control, setValue } = useFormContext();\n  useEffect(() => {\n    if (options.length === 1) {\n      setValue(fieldName, options[0].value as any);\n    }\n  }, [options, fieldName]);\n  return (\n    <div className=\"grid\">\n      <Controller\n        name={fieldName}\n        control={control}\n        rules={{\n          required: true,\n        }}\n        render={({ fieldState, field }) => {\n          return (\n            <>\n              {options.map((option: Option) => (\n                <div\n                  key={option.value}\n                  className={getColumnClass(ColumnNumber)}\n                >\n                  <RadioOptionWrapper\n                    className={`singleradio ${option.value} ${\n                      option.value === field.value ? option.value : \"\"\n                    }`}\n                    onClick={() => field.onChange(option.value)}\n                    isChecked={option.value === field.value}\n                  >\n                    <svg\n                      className=\"checkedicon\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"20\"\n                      viewBox=\"0 0 13 12\"\n                      fill=\"none\"\n                    >\n                      <path\n                        d=\"M5.6371 8.44536L9.57654 4.50592L8.70186 3.63124L5.6371 6.696L4.1454 5.20431L3.28429 6.07898L5.6371 8.44536ZM6.46027 11.5033C5.67276 11.5033 4.93254 11.3549 4.23961 11.0579C3.54669 10.7609 2.94226 10.3541 2.42634 9.83726C1.91043 9.32045 1.50405 8.71681 1.20722 8.02635C0.910382 7.3359 0.761963 6.59728 0.761963 5.8105C0.761963 5.01395 0.910441 4.26921 1.2074 3.57628C1.50435 2.88336 1.91052 2.27983 2.42591 1.7657C2.94131 1.25156 3.54456 0.845182 4.23568 0.546562C4.9268 0.247943 5.66613 0.0986328 6.45366 0.0986328C7.25097 0.0986328 7.99665 0.248187 8.6907 0.547295C9.38475 0.846403 9.98847 1.25234 10.5019 1.7651C11.0153 2.27786 11.4211 2.88027 11.7193 3.57234C12.0176 4.26439 12.1667 5.00925 12.1667 5.8069C12.1667 6.59565 12.0173 7.33642 11.7186 8.0292C11.4198 8.72198 11.0129 9.32578 10.4979 9.8406C9.98288 10.3554 9.38014 10.7613 8.68968 11.0581C7.99923 11.3549 7.25609 11.5033 6.46027 11.5033Z\"\n                        fill=\"white\"\n                      />\n                    </svg>\n                    {option.render}\n                  </RadioOptionWrapper>\n                </div>\n              ))}\n            </>\n          );\n        }}\n      />\n      {children}\n    </div>\n  );\n}\n\nexport default RadioGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}